apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

buildscript {
    repositories {
        maven{url 'http://maven.aliyun.com/nexus/content/groups/public/'}
//        jcenter(){ url 'http://jcenter.bintray.com/'}
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.1'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'
    }
}
greendao{
    schemaVersion 1
    targetGenDir 'src/main/java/'
    daoPackage 'commonlyused.db'
}

def isDebug() {
    def taskNames = gradle.startParameter.taskNames
    for (tn in taskNames) {
        if( (tn.contains("install") || tn.contains("assemble")) && tn.contains("Debug")) {
            return true
        }
    }
    return false
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.wanglicrm.android"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 20201026
        versionName "1.13.001"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
        //cpu 架构，统一用armeabi-v7a
        ndk {
            abiFilters "armeabi-v7a"
        }
    }
    def enableCruncher = { ->
        return !isDebug()
    }

    aaptOptions { //禁用cruncher, 以加速编译
        cruncherEnabled = enableCruncher()
        cruncherProcesses = 0
    }


    //配置keystore签名
    signingConfigs {
        debug {
            storeFile file("$projectDir/keystore/jiuyi.jks")
            storePassword "zxcvbnm,"
            keyAlias "key0"
            keyPassword "zxcvbnm,"
            //防止因混淆问题出现Janus漏洞
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            storeFile file("$projectDir/keystore/jiuyi.jks")
            storePassword "zxcvbnm,"
            keyAlias "key0"
            keyPassword "zxcvbnm,"
            //防止因混淆问题出现Janus漏洞
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    packagingOptions{
        exclude 'META-INF/rxjava.properties'
    }

    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            shrinkResources true //资源压缩
            zipAlignEnabled true//Zipalign优化
            proguardFiles 'proguard.cfg'
            signingConfig signingConfigs.release
        }
        debug {
            crunchPngs false //关闭crunchPng优化, 以加快构建
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            shrinkResources false //资源压缩
            zipAlignEnabled false//Zipalign优化
            proguardFiles 'proguard.cfg'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }

    }

    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                outputFileName = "WangLiCRM" + defaultConfig.versionName + "[" + defaultConfig.versionCode + "]001_" + buildType.name + ".apk";
            }
    }

    dexOptions {
        dexInProcess true
        //使用增量模式构建
        incremental true
        //最大堆内存
        javaMaxHeapSize "12g"
        //是否支持大工程模式
        jumboMode=true
        //预编译
        preDexLibraries=true
        //线程数
        threadCount=12
    }

    //程序在编译的时候会检查lint，有任何错误提示会停止build，我们可以关闭这个开关
    lintOptions {
        disable "ResourceType"
//        //即使报错也不会停止打包
//        abortOnError false
//        //打包release版本的时候进行检测
//        checkReleaseBuilds false
    }
    //使用aar不可少的一句
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    //设置JDK1.8
    compileOptions {
        incremental = true  //开启增量编译
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    if (isDebug()) {
        gradle.taskGraph.whenReady {
            tasks.each { task ->
                if (task.name.contains("Test") || task.name.contains("Lint")) {
                    task.enabled = false
                }
            }
        }
    }
}

//2.0 与 3.0 编译命令区别
//compile依赖关系已被弃用，被implementation和api替代
//api
//api跟2.x版本的 compile完全相同
//implementation
//只能在内部使用此模块，比如我在一个libiary中使用implementation依赖了gson库，然后我的主项目依赖了libiary，
//那么，我的主项目就无法访问gson库中的方法,这样的好处是编译速度会加快
//provided（compileOnly）
//只在编译时有效，不会参与打包
//可以在自己的moudle中使用该方式依赖一些比如com.android.support，gson这些使用者常用的库，避免冲突。
//apk（runtimeOnly）
//只在生成apk的时候参与打包，编译时不会参与，很少用。
//testCompile（testImplementation）
//testCompile 只在单元测试代码的编译以及最终打包测试apk时有效。
//debugCompile（debugImplementation）
//debugCompile 只在debug模式的编译和最终的debug apk打包时有效
//releaseCompile（releaseImplementation）
//Release compile 仅仅针对Release 模式的编译和最终的Release apk打包。

dependencies {
    api fileTree(include: '*.jar', dir: 'libs')
    implementation 'com.facebook.fresco:fresco:1.9.0'
    api project(':jiuyiControl')
    implementation project(':jiuyiIflytekSDK')

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.tencent.bugly:crashreport:latest.release' //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.2.0
    api 'com.android.support:multidex:1.0.2'
    api 'com.hyman:flowlayout-lib:1.1.2'

    api 'com.gyf.barlibrary:barlibrary:2.3.0'
    implementation(name:'lib-zxing-release', ext:'aar')
    implementation(name:'picktime-release', ext:'aar')

    implementation(name:'takephoto_library-1.0', ext:'aar')
    implementation(name:'leafchart-release', ext:'aar')
    implementation(name:'chart-release', ext:'aar')
    implementation(name:'hipermission', ext:'aar')
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    implementation 'com.github.bumptech.glide:glide:4.2.0'
    implementation(name:'badgenumberlibrary-debug', ext:'aar')
    annotationProcessor 'com.github.bumptech.glide:compiler:4.2.0'
    implementation 'com.jaeger.ninegridimageview:library:1.1.0'
    implementation(name:'ImagePreview-debug', ext:'aar')
    implementation 'me.relex:circleindicator:1.2.2@aar'

    implementation(name:'citypickerview-debug', ext:'aar')
    implementation(name:'loadingdialog-release', ext:'aar')
    implementation(name:'recyclerview-swipe', ext:'aar')
    implementation(name:'spinner_lib-1.0', ext:'aar')
    implementation(name:'mentions-release', ext:'aar')
    implementation(name:'jiaozivideoplayer-release', ext:'aar')
    compile 'com.danikula:videocache:2.6.4'


    implementation 'com.haibin:calendarview:3.4.8'

    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'org.greenrobot:greendao-generator:3.2.0'
    implementation 'com.android.support:appcompat-v7:27.1.1'


    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.4'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.4'//没有使用特殊Header，可以不加这行
    implementation 'com.zly.widget:collapsed-textview:1.0.4'


    //添加leakcanary相关的依赖
    //在release和test版本中，使用的是LeakCanary的no-op版本，也就是没有实际代码和操作的Wrapper版本，只包含LeakCanary和RefWatcher类的空实现，这样不会对生成的APK包体积和应用性能造成影响
//    implementation 'com.android.support:appcompat-v7:27.+'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.qiniu:qiniu-android-sdk:7.3.+'
    implementation 'com.bm.photoview:library:1.4.1'

    //添加leakcanary
/*    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'*/


    implementation project(':jiuyiControl')
    implementation project(':jiuyiIflytekSDK')
    implementation project(':jiuyiRxHttp')
    implementation project(':impresentation')
    implementation project(':imui')
    implementation 'com.android.support:cardview-v7:27.1.1'

    implementation files('libs/pinyin4j-2.5.0.jar')
    implementation files('libs/easythread.jar')

    implementation files('libs/tbs_sdk_thirdapp_v3.6.0.1371_43624_sharewithdownload_withoutGame_obfs_20181106_121046.jar')
    implementation files('libs/MiPush_SDK_Client_3_6_9.jar')
    api 'com.meizu.flyme.internet:push-internal:3.6.+@aar'

    api 'com.amap.api:navi-3dmap:latest.integration'
    api 'com.amap.api:location:latest.integration'
    api 'com.amap.api:search:latest.integration'


    api 'com.umeng.sdk:common:latest.integration'
    api 'com.umeng.sdk:analytics:latest.integration'
    implementation(name:'compresshelper', ext:'aar')
    implementation 'com.lcodecorex:tkrefreshlayout:1.0.7'
    implementation(name:'recordlib-release', ext:'aar')
    implementation 'com.lixs.charts:charts:1.0.7'
    implementation files('libs/jaudiotagger')
    implementation(name:'waveview-release', ext:'aar')

    implementation(name:'dialoglib-1.0', ext:'aar')





}
