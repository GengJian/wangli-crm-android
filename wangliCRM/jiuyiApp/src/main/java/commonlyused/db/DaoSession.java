package commonlyused.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import commonlyused.bean.AppItemBean;
import commonlyused.bean.OperatorNodeBean;
import commonlyused.bean.LinkmanGreenBean;
import com.jiuyi.model.DictBean;

import commonlyused.db.AppItemBeanDao;
import commonlyused.db.OperatorNodeBeanDao;
import commonlyused.db.LinkmanGreenBeanDao;
import commonlyused.db.DictBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig appItemBeanDaoConfig;
    private final DaoConfig operatorNodeBeanDaoConfig;
    private final DaoConfig linkmanGreenBeanDaoConfig;
    private final DaoConfig dictBeanDaoConfig;

    private final AppItemBeanDao appItemBeanDao;
    private final OperatorNodeBeanDao operatorNodeBeanDao;
    private final LinkmanGreenBeanDao linkmanGreenBeanDao;
    private final DictBeanDao dictBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        appItemBeanDaoConfig = daoConfigMap.get(AppItemBeanDao.class).clone();
        appItemBeanDaoConfig.initIdentityScope(type);

        operatorNodeBeanDaoConfig = daoConfigMap.get(OperatorNodeBeanDao.class).clone();
        operatorNodeBeanDaoConfig.initIdentityScope(type);

        linkmanGreenBeanDaoConfig = daoConfigMap.get(LinkmanGreenBeanDao.class).clone();
        linkmanGreenBeanDaoConfig.initIdentityScope(type);

        dictBeanDaoConfig = daoConfigMap.get(DictBeanDao.class).clone();
        dictBeanDaoConfig.initIdentityScope(type);

        appItemBeanDao = new AppItemBeanDao(appItemBeanDaoConfig, this);
        operatorNodeBeanDao = new OperatorNodeBeanDao(operatorNodeBeanDaoConfig, this);
        linkmanGreenBeanDao = new LinkmanGreenBeanDao(linkmanGreenBeanDaoConfig, this);
        dictBeanDao = new DictBeanDao(dictBeanDaoConfig, this);

        registerDao(AppItemBean.class, appItemBeanDao);
        registerDao(OperatorNodeBean.class, operatorNodeBeanDao);
        registerDao(LinkmanGreenBean.class, linkmanGreenBeanDao);
        registerDao(DictBean.class, dictBeanDao);
    }
    
    public void clear() {
        appItemBeanDaoConfig.clearIdentityScope();
        operatorNodeBeanDaoConfig.clearIdentityScope();
        linkmanGreenBeanDaoConfig.clearIdentityScope();
        dictBeanDaoConfig.clearIdentityScope();
    }

    public AppItemBeanDao getAppItemBeanDao() {
        return appItemBeanDao;
    }

    public OperatorNodeBeanDao getOperatorNodeBeanDao() {
        return operatorNodeBeanDao;
    }

    public LinkmanGreenBeanDao getLinkmanGreenBeanDao() {
        return linkmanGreenBeanDao;
    }

    public DictBeanDao getDictBeanDao() {
        return dictBeanDao;
    }

}
